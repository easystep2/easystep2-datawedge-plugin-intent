name: Publish to NPM

on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., 4.0.1)'
        required: true
        default: ''
      publish-capacitor:
        description: 'Publish Capacitor plugin'
        type: boolean
        default: true
      publish-cordova:
        description: 'Publish Cordova plugin'
        type: boolean
        default: true
      dry-run:
        description: 'Dry run (no actual publishing)'
        type: boolean
        default: false

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      packages: write
    
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Display branch information
        run: |
          echo "Running on branch: ${{ github.ref_name }}"
          echo "Repository: ${{ github.repository }}"
          echo "Commit SHA: ${{ github.sha }}"
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'
      
      - name: Install dependencies
        run: npm install
      
      - name: Update version if provided
        if: github.event.inputs.version != ''
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "Current package version: $CURRENT_VERSION"
          if [ "$CURRENT_VERSION" != "${{ github.event.inputs.version }}" ]; then
            npm version ${{ github.event.inputs.version }} --no-git-tag-version
            echo "Version updated to ${{ github.event.inputs.version }}"
          else
            echo "Version not changed (current version is already $CURRENT_VERSION)"
          fi

      - name: Build TypeScript
        run: npm run build:ts
        
      - name: Prepare Capacitor Plugin
        run: node scripts/prepare-capacitor.js
        
      - name: Prepare Cordova Plugin
        run: node scripts/prepare-cordova.js
      
      - name: Create package tarballs
        run: |
          cd dist/capacitor && npm pack
          cd ../cordova && npm pack
          
      # Upload tarballs as artifacts for verification
      - name: Upload package tarballs
        uses: actions/upload-artifact@v4
        with:
          name: npm-packages
          path: |
            dist/capacitor/*.tgz
            dist/cordova/*.tgz
        
      # Add debug step to show input values
      - name: Debug workflow inputs
        run: |
          echo "Input values:"
          echo "dry-run: '${{ github.event.inputs.dry-run }}'"
          echo "publish-capacitor: '${{ github.event.inputs.publish-capacitor }}'"
          echo "publish-cordova: '${{ github.event.inputs.publish-cordova }}'"

      - name: Publish Capacitor Plugin to NPM
        if: ${{ github.event.inputs.dry-run != 'true' && github.event.inputs.publish-capacitor == 'true' }}
        run: |
          echo "Publishing Capacitor plugin..."
          cd dist/capacitor && npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
      - name: Publish Cordova Plugin to NPM
        if: ${{ github.event.inputs.dry-run != 'true' && github.event.inputs.publish-cordova == 'true' }}
        run: |
          echo "Publishing Cordova plugin..."
          cd dist/cordova && npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          
      # Provide feedback at the end
      - name: Publication Status
        run: echo "Build and package creation completed"
      
      - name: Dry Run Status
        if: github.event.inputs.dry-run == 'true'
        run: echo "✅ Dry run completed - packages were created but not published"
      
      - name: Capacitor Publish Status
        if: github.event.inputs.dry-run == 'false' && github.event.inputs.publish-capacitor == 'true'
        run: echo "✅ Capacitor plugin published to npm registry"
      
      - name: Cordova Publish Status
        if: github.event.inputs.dry-run == 'false' && github.event.inputs.publish-cordova == 'true'
        run: echo "✅ Cordova plugin published to npm registry"
