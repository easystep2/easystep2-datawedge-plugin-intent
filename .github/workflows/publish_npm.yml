name: Publish to NPM

on:
  workflow_run:
    workflows: ["Build Plugin"]
    types:
      - completed
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (leave empty to use current version)'
        required: false
        default: ''
      auto_bump:
        description: 'Auto-bump version'
        type: 'choice'
        options:
          - 'none'
          - 'patch'
          - 'minor'
          - 'major'
        default: 'none'
      publish-capacitor:
        description: 'Publish Capacitor plugin'
        type: boolean
        default: true
      publish-cordova:
        description: 'Publish Cordova plugin'
        type: boolean
        default: true
      dry-run:
        description: 'Dry run (no actual publishing)'
        type: boolean
        default: false

jobs:
  publish:
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success' || github.event_name == 'release' || github.event_name == 'workflow_dispatch'
    
    permissions:
      contents: write # Needed for creating tags and commits
      packages: write
    
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Important to fetch git history for version tagging
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Set git identity for version commits
        if: ${{ github.event.inputs.auto_bump != 'none' }}
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"

      - name: Build artifacts if not triggered by workflow_run
        if: github.event_name == 'release' || github.event_name == 'workflow_dispatch'
        run: |
          npm install
          
          # Handle version management
          if [ "${{ github.event.inputs.auto_bump }}" != "none" ]; then
            # Auto-bump the version
            echo "Auto-bumping version (${{ github.event.inputs.auto_bump }})..."
            npm run version:${{ github.event.inputs.auto_bump }}
            
            # Extract the new version for tagging
            NEW_VERSION=$(node -p "require('./package.json').version")
            echo "Bumped to version: $NEW_VERSION"
            
            # Create a git tag and push changes
            git add .
            git commit -m "chore: bump version to $NEW_VERSION [skip ci]"
            git tag -a "v$NEW_VERSION" -m "Release v$NEW_VERSION"
            git push origin HEAD:${{ github.ref }} --tags
            
          elif [ -n "${{ github.event.inputs.version }}" ]; then
            # Use the manually specified version
            echo "Using specified version: ${{ github.event.inputs.version }}"
            node scripts/sync-versions.js --version=${{ github.event.inputs.version }}
          fi
          
          npm run build:ts
          node scripts/prepare-capacitor.js
          node scripts/prepare-cordova.js
          cd dist/capacitor && npm pack
          cd ../cordova && npm pack

      - name: Download artifacts from build job
        if: github.event_name == 'workflow_run'
        uses: actions/download-artifact@v4
        with:
          name: npm-packages
          path: dist
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.event.workflow_run.id }}
      
      - name: Display downloaded files
        run: ls -R dist

      - name: Publish Capacitor Plugin to NPM
        if: ${{ (github.event_name == 'workflow_run' || github.event.inputs.publish-capacitor == 'true') && github.event.inputs.dry-run != 'true' }}
        run: |
          echo "Publishing Capacitor plugin..."
          cd dist/capacitor && npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
      - name: Publish Cordova Plugin to NPM
        if: ${{ (github.event_name == 'workflow_run' || github.event.inputs.publish-cordova == 'true') && github.event.inputs.dry-run != 'true' }}
        run: |
          echo "Publishing Cordova plugin..."
          cd dist/cordova && npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          
      # Provide feedback at the end
      - name: Publication Status
        run: echo "Publication process completed"
      
      - name: Dry Run Status
        if: github.event.inputs.dry-run == 'true'
        run: echo "✅ Dry run completed - packages were not published"
      
      - name: Capacitor Publish Status
        if: ${{ (github.event_name == 'workflow_run' || github.event.inputs.publish-capacitor == 'true') && github.event.inputs.dry-run != 'true' }}
        run: echo "✅ Capacitor plugin published to npm registry"
      
      - name: Cordova Publish Status
        if: ${{ (github.event_name == 'workflow_run' || github.event.inputs.publish-cordova == 'true') && github.event.inputs.dry-run != 'true' }}
        run: echo "✅ Cordova plugin published to npm registry"
